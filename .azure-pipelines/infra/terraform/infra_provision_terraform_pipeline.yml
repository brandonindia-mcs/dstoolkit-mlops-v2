pr: none
trigger: none
pool:
  vmImage: ubuntu-latest


variables:
- group: mlops_platform_dev_vg

jobs:
- job: Deploy_MLOps_v2_Infrastructure  
  steps:
  - script: |
      echo 'See the contents of parameters passed in'
      echo '$(APPINSIGHTS_NAME)'
      echo '$(AZURE_RM_SVC_CONNECTION)'
      echo '$(CONTAINER_REGISTRY_NAME)'
      echo '$(KEYVAULT_NAME)'
      echo '$(LOCATION)' 
      echo '$(RESOURCE_GROUP_NAME)' 
      echo '$(STORAGE_ACCT_NAME)'
      echo '$(TFSTATE_RESOURCE_GROUP_NAME)'          
      echo '$(TFSTATE_STORAGE_ACCT_NAME)'
      echo '$(WORKSPACE_NAME)'

    enabled: true

  - task: qetza.replacetokens.replacetokens-task.replacetokens@5
    inputs:
      rootDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
      targetFiles: '*.tfvars'
      encoding: 'auto'
      tokenPattern: 'custom'
      writeBOM: true
      actionOnMissing: 'warn'
      keepToken: false
      actionOnNoFiles: 'continue'
      enableTransforms: true
      transformPrefix: '#{'
      transformSuffix: '}#'
      enableRecursion: false
      useLegacyPattern: false
      enableTelemetry: false
    enabled: true 

  - task: AzureCLI@2
    displayName: Add tfstate resource group
    inputs:
      azureSubscription: '$(AZURE_RM_SVC_CONNECTION)'
      scriptType: pscore
      scriptLocation: inlineScript
      useGlobalConfig: false
      inlineScript: |
        az --version
        az group create --location '$(LOCATION)' --name '$(TFSTATE_RESOURCE_GROUP_NAME)'
    enabled: true

  - task: AzureCLI@2
    displayName: Add tfstate account
    inputs:
      azureSubscription: '$(AZURE_RM_SVC_CONNECTION)'
      scriptType: pscore
      scriptLocation: inlineScript
      useGlobalConfig: false
      inlineScript: |
        az --version
        az storage account create --name '$(TFSTATE_STORAGE_ACCT_NAME)' --resource-group '$(TFSTATE_RESOURCE_GROUP_NAME)' --sku Standard_LRS
    enabled: true

  - task: AzureCLI@2
    displayName: Add terraform container
    inputs:
      azureSubscription: '$(AZURE_RM_SVC_CONNECTION)'
      scriptType: pscore
      scriptLocation: inlineScript
      useGlobalConfig: false
      inlineScript: |
        az --version
        az storage container create --name terraform --account-name '$(TFSTATE_STORAGE_ACCT_NAME)'
    enabled: true

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
    displayName: 'Terraform Install'
    inputs:
      terraformVersion: 'latest'
    enabled: true


  - task: TerraformTaskV4@4
    displayName: 'Terraform Init'
    inputs:
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
      backendServiceArm: '$(AZURE_RM_SVC_CONNECTION)'
      ensureBackend: true
      backendAzureRmResourceGroupName: '$(TFSTATE_RESOURCE_GROUP_NAME)'
      backendAzureRmStorageAccountName: '$(TFSTATE_STORAGE_ACCT_NAME)' 
      backendAzureRmContainerName: terraform
      backendAzureRmKey: mlops.tfstate
    enabled: true

  - task: TerraformTaskV4@4
    displayName: 'Terraform Validate'
    inputs:
      command: 'validate'
      workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
    enabled: true

  - task: TerraformTaskV4@4
    displayName: 'Terraform Plan'
    inputs:
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
      allowTelemetryCollection: true
      environmentServiceNameAzureRM: '$(AZURE_RM_SVC_CONNECTION)'
      commandOptions: '-out=tfplan'
    enabled: true

  - task: TerraformTaskV4@4
    displayName: 'Terraform Apply'
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/infra/terraform/public_workspace'
      environmentServiceNameAzureRM: '$(AZURE_RM_SVC_CONNECTION)'
      commandOptions: '-auto-approve -input=false  tfplan'
    enabled: true