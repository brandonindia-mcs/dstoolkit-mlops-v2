name: Platform CI Workflow
on:
  workflow_call:
    inputs:
      exec_environment:
        type: string
        description: "Execution Environment"
        required: true
        default: "dev"
      model_type:
        type: string
        description: "type of model to execute"
        required: true
    secrets:
      subscription_id:
        description: "the subscription ID hosting the AML instance."
        required: true
      azure_credentials:
        description: "the credentials to use to authenticate with Azure."
        required: true
      is_batch_deployment: 
        description: "the flag for batch deployment."
        required: true
jobs:
  execute-training-job:
    name: Execute training job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v1
      - name: Export Secrets 
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}
          convert: upper
      - name: Generate Variables
        uses: ./.github/actions/generate_variables
        with:
          azure_credentials: ${{ secrets.azure_credentials }}
          env_name: ${{ inputs.exec_environment }}
          model_type: ${{ inputs.model_type }}
      - name: Configure Azure ML Agent
        uses: ./.github/actions/configure_azureml_agent
      - name: Execute MLOps Standard Pipeline
        uses: ./.github/actions/execute_shell_code
        env:
          BUILD_BUILDID: "${{ github.run_id }}" # Match the expected name from Azure DevOps pipelines
        with:
          azure_credentials: ${{ secrets.azure_credentials }}
          script_parameter: |
            python -m mlops.${{ inputs.model_type }}.src.mlops_pipeline \
              --environment_name ${{ inputs.exec_environment }} \
              --wait_for_completion True \
              --output_file run_id.txt
      - name: Read PromptFlow Runs
        shell: bash
        run: |
          readarray arr <"run_id.txt"
          run_name=${arr[0]}
          echo $run_name
          echo "RUN_NAME=${run_name}"  >> "$GITHUB_ENV"
          echo $PWD
#   deploy:
#     name: Deploy_Online
#     runs-on: ubuntu-latest
#     if: ${{ secrets.is_batch_deployment == 'true' }}
#     needs: [execute-training-job]
#     env:
#       BUILD_BUILDID: "${{ github.run_id }}"
#     steps:
#       - name: Checkout Actions
#         uses: actions/checkout@v1
#       - name: Generate Variables
#         uses: ./.github/actions/generate_variables
#         with:
#           azure_credentials: ${{ secrets.azure_credentials }}
#           env_name: ${{ inputs.exec_environment }}
#           model_type: ${{ inputs.model_type }}
#       - name: Configure Azure ML Agent
#         uses: ./.github/actions/configure_azureml_agent
#       - name: Register Model
#         uses: ./.github/actions/execute_shell_code
#         with:
#           azure_credentials: ${{ secrets.azure_credentials }}
#           script_parameter: |
#             python -m mlops.common.deployment.register_model \
#               --subscription_id ${{ secrets.subscription_id }} \
#               --resource_group_name $RESOURCE_GROUP_NAME \
#               --workspace_name $WORKSPACE_NAME \
#               --model_name $MODEL_NAME \
#               --model_path $STANDARD_MODEL_PATH \
#               --model_type ${{ inputs.model_type }} \
#               --output_file "model_version.txt" \
#               --build_id ${{ github.run_id }}
#       - name: Read Model Version
#         shell: bash
#         run: |
#           readarray arr <"model_version.txt"
#           model_version=${arr[0]}
#           echo $model_version
#           echo "MODEL_VERSION=${model_version}"  >> "$GITHUB_ENV"
#       - name: Deploy to Azure ML
#         uses: ./.github/actions/aml_real_deployment
#         with:
#           azure_credentials: ${{ secrets.azure_credentials }}
#           SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
#           RESOURCE_GROUP_NAME: $RESOURCE_GROUP_NAME
#           WORKSPACE_NAME: $WORKSPACE_NAME
#           MODEL_TYPE: ${{ inputs.model_type }}
#           MODEL_NAME: $MODEL_NAME
#           DEPLOY_ENVIRONMENT: ${{ inputs.exec_environment }}
#           REALTIME_DEPLOYMENT_CONFIG: $REALTIME_DEPLOYMENT_CONFIG
#           MODEL_VERSION: $MODEL_VERSION