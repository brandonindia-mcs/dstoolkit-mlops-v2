
parameters:
- name: environmentName
  type: string
- name: azureMgrConnection
  type: string
- name: resourceGroup
  type: string
- name: location
  type: string     
- name: storageAccount
  type: string
- name: keyVaultName
  type: string
- name: appInsightsName  
  type: string
- name: containerRegistryName  
  type: string
- name: amlWorkspaceName  
  type: string   
- name: clusterName  
  type: string
- name: clusterSize  
  type: string
- name: batchClusterName  
  type: string  
  
stages:
  - stage: publish_IaC_templates
    displayName: Publish IaC Templates
    jobs:
    - job: Publish_IaC_Templates
      steps:
          - checkout: self
            clean: true
          - task: CopyFiles@2
            displayName: 'Copy templates'
            inputs:
              sourceFolder: '$(Pipeline.Workspace)/s'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
            enabled: true

          - publish: '$(Build.ArtifactStagingDirectory)'
            artifact: infratemplates 
            enabled: true

  - stage: deploy_mlops_infrastructure
    displayName: Deploy MLOps Infrastructure
    dependsOn:
      - infra_variable_generation
      - publish_IaC_templates
    variables:
      - template: templates/infra_bicep_variables.yml
    jobs:
    - job: Deploy_MLOps_v2_Infrastructure  
      steps:
      - download: current
        artifact: infratemplates
        displayName: Download IaC Templates

      - script: |
          echo 'See the contents of parameters passed in'
          echo '${{parameters.azureMgrConnection}}'
          echo '${{parameters.environmentName}}'
          echo '${{parameters.resourceGroup}}'
          echo '${{parameters.location}}'
          echo '${{parameters.storageAccount}}'
          echo '${{parameters.keyVaultName}}'
          echo '${{parameters.appInsightsName}}'
          echo '${{parameters.containerRegistryName}}'
          echo '${{parameters.amlWorkspaceName}}'
          echo '${{parameters.clusterName}}'
          echo '${{parameters.clusterSize}}'
          echo '${{parameters.batchClusterName}}'
        enabled: false

      - task: AzureCLI@2
        displayName: Provision AzureML Infrastructure
        inputs:
          azureSubscription: '${{parameters.azureMgrConnection}}'
          scriptType: pscore
          scriptLocation: inlineScript
          useGlobalConfig: false
          inlineScript: |
            az --version
            az deployment sub create --location='${{parameters.location}}' `
            --template-file '$(Pipeline.Workspace)/infratemplates/infra/bicep/public_workspace/main.bicep' `
            --parameters resourceGroupName='${{parameters.resourceGroup}}' location='${{parameters.location}}' `
            storageAccount='${{parameters.storageAccount}}' `
            keyVaultName='${{parameters.keyVaultName}}' `
            appInsightsName='${{parameters.appInsightsName}}' `
            containerRegistryName='${{parameters.containerRegistryName}}' `
            amlWorkspaceName='${{parameters.amlWorkspaceName}}'
        enabled: true

      - task: AzureCLI@2
        displayName: Add Compute Cluster
        inputs:
          azureSubscription: '${{parameters.azureMgrConnection}}'
          scriptType: pscore
          scriptLocation: inlineScript
          useGlobalConfig: false
          inlineScript: |
            Write-Host "cluster is ${{parameters.clusterName}} and cluster-size is ${{parameters.clusterSize}}"
            az --version
            az extension add -n ml -y
            az ml compute create --name '${{parameters.clusterName}}' --size '${{parameters.clusterSize}}' `
            --type AmlCompute --resource-group '${{parameters.resourceGroup}}' --workspace-name '${{parameters.amlWorkspaceName}}'
        enabled: true

      - task: AzureCLI@2
        displayName: Add Batch Cluster
        inputs:
          azureSubscription: '${{parameters.azureMgrConnection}}'
          scriptType: pscore
          scriptLocation: inlineScript
          useGlobalConfig: false
          inlineScript: |
            Write-Host "cluster is ${{parameters.clusterName}} and cluster-size is ${{parameters.clusterSize}}"
            az --version
            az extension add -n ml -y
            az ml compute create --name '${{parameters.batchclusterName}}' --size '${{parameters.clusterSize}}' `
            --type AmlCompute --resource-group '${{parameters.resourceGroup}}' --workspace-name '${{parameters.amlWorkspaceName}}'
        enabled: true

      - task: AzureCLI@2
        displayName: Add Key Vault access policy to service principal backing service connection
        inputs:
          azureSubscription: '${{parameters.azureMgrConnection}}'
          scriptType: pscore
          addSpnToEnvironment: true
          scriptLocation: inlineScript
          useGlobalConfig: false
          inlineScript: |
            az --version
            do {
                Start-Sleep -s 30
                $id = (az ad sp show --id $env:servicePrincipalId --query id)
            } until ($id -ne $null)
            az keyvault set-policy --name ${{parameters.keyVaultName}} --object-id $id --secret-permissions get list
        enabled: true              